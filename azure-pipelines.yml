trigger:
  - main
variables:
  - group: UiPath
  - name: agent.preferPowerShellOnContainers
    value: "True"

stages:
  - stage: Build
    displayName: Build Package
    jobs: 
    - job: BuildPackage
      pool: Default
      steps:    
      
      - task: UiPathPack@2
        inputs:
          versionType: 'AutoVersion'
          projectJsonPath: '$(Build.SourcesDirectory)\project.json'
          outputType: 'Process'
          orchestratorConnection: 'UiPath_AZ_DevOps_SVC_Conn'
          outputPath: '$(Build.ArtifactStagingDirectory)'
      - publish: $(Build.ArtifactStagingDirectory)
        artifact: drop

      # - task: UiPathPack@2
      #   inputs:
      #   versionType: 'ManualVersion'
      #   version: '1.0.$(Build.BuildNumber)'
      #     projectJsonPath: ''
      #     outputType: 'Process'
      #     orchestratorConnection: 'UiPath_AZ_DevOps_SVC_Conn'
      #     outputPath: '$(Build.ArtifactStagingDirectory)'
      # - publish: $(Build.ArtifactStagingDirectory)
      #   artifact: drop
      
      
  - stage: Log
    displayName: Log Package
    dependsOn: Build
    jobs: 
      - job: LogDetails2
        pool: Default
        steps:   
        - task: PowerShell@2
          inputs:
            targetType: 'inline'
            script: |
              # Write your PowerShell commands here.              
              Write-Host "$(Build)"


  - stage: Assest
    displayName: Create Assests
    dependsOn: Log
    jobs:
      - job: CreateAssests
        pool: Default
        steps:
        - task: UiPathAssets@2
          inputs:
            orchestratorConnection: 'UiPath_AZ_DevOps_SVC_Conn'
            folderName: 'Default'
            assetActionType: 'Deploy'
            csvFile: '$(Build.SourcesDirectory)\Data\Assests.csv'

  - stage: DeployDEV
    displayName: Deploy build artifact to DEV
    dependsOn: Log
    condition: succeeded()
    jobs:
      - deployment: deployDEV
        displayName: Deploy package to DEV Orchestrator
        pool: Default
        environment: DEV
        strategy:
         runOnce:
          deploy:
           steps:
            - task: UiPathDeploy@2
              inputs:
                orchestratorConnection: 'UiPath_AZ_DevOps_SVC_Conn'
                packagesPath: '$(Pipeline.Workspace)\drop\'
                folderName: 'Default'
                
  - stage: WorkflowAnalyser
    displayName: RunWorkflow Analyser
    dependsOn: Log
    condition: succeeded()
    jobs:
        - job: WorkflowAnalyser
          displayName: AnalyseProject Using Workflow Cli
          pool: Default
          steps:
          - task: PowerShell@2
            inputs:
              targetType: filePath
              filePath: $(Build.SourcesDirectory)\Data\Workflow-Analyzer-CLI-Script.ps1
              arguments: > # Use this to avoid newline characters in multiline string
                -ProjectFilePath $(Build.SourcesDirectory)\project.json
                -ExecutableFilePath "C:\'Program Files'\UiPath\Studio\UiPath.Studio.CommandLine.exe"
                -OutputFilePath '$(Pipeline.Workspace)\drop\Workflow-Analysis.json'
              workingDirectory: $(Build.SourcesDirectory)
            displayName: 'Analyse Project'

  - stage : CodeQuality
    displayName: Check Code Analysis
    dependsOn: Log
    condition: succeeded()
    jobs:
      - job : CodeQuality
        steps:
          - task: SonarCloudPrepare@1
            inputs:
              SonarCloud: 'UiPath_Sonar_AzureDevOps'
              organization: 'innowise'
              scannerMode: 'CLI'
              configMode: 'manual'
              cliProjectKey: 'innowise_UiPathAzureDevOpsExample'
              cliProjectName: 'UiPathAzureDevOps'
              cliSources: '.'
          - task: SonarCloudAnalyze@1
          - task: SonarCloudPublish@1
            inputs:
              pollingTimeoutSec: '300'


  - stage: TestDEV
    displayName:  Test After Publish
    dependsOn: DeployDEV
    condition: succeeded()
    jobs:
      - job: TestDEV
        pool: Default
        steps:
          - task: UiPathTest@2
            inputs:
              testTarget: 'TestSet'
              orchestratorConnection: 'UiPath_AZ_DevOps_SVC_Conn'
              testSet: 'UiPathAzureDevOps_Test'
              folderName: 'Default'
              testReportDestination: '$(Pipeline.Workspace)\drop\'
